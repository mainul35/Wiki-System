/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View;

import Controller.MiddleWare;
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.GridBagLayout;
import java.awt.GridLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.StringTokenizer;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.DefaultListSelectionModel;
import javax.swing.JLabel;
import javax.swing.JList;
import javax.swing.JOptionPane;
import javax.swing.JScrollPane;
import javax.swing.ListModel;
import javax.swing.ListSelectionModel;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.event.MouseInputAdapter;
import wiki.DataModel.StoreData.CreateUserInformation;
import wiki.DataModel.StoreData.ReadUserInformation;
import wiki.DataModel.StoreData.UpdateUserInformation;
import wiki.DataModel.StoreData.VersionInformation;

/**
 *
 * @author Mainul35
 */
public class AdminPanel extends javax.swing.JFrame implements Runnable {

    /**
     * Creates new form UserPanel
     */
    static public String uname;

    static int preVersion, revertButtonClicked = 1;
    
    static String preVersionURI;
    
    static int currentPageVersion;
    
    static String currentPageURI;

    String pageTitle = null;

    private StringBuilder pageContent = null;

    private String username = null;

    private String userRole = null;

    private String permissionType = null;

    private AdvancedPanel[] aContainer = new AdvancedPanel[100];
    //JPanel();
    private AdvancedPanel[] aComponentHolder = new AdvancedPanel[100];
    //JPanel();
    private AdvancedCheckBox[] aChqEditPermission = new AdvancedCheckBox[100];
//    JCheckBox("Read Permission");
    private AdvancedCheckBox[] aChqReadPermission = new AdvancedCheckBox[100];
//    JCheckBox("Edit Permission");
    private AdvancedButton[] aBtnSubmit = new AdvancedButton[100];
    //JButton("Submit");
    private AdvancedButton[] aBtnClose = new AdvancedButton[100];
    //JButton("Close");
    private AdvancedLabel[] aLblText = new AdvancedLabel[100];
    private String parseHyperText;

    public AdminPanel() throws RuntimeException {
        initComponents();
        this.setDefaultCloseOperation(DO_NOTHING_ON_CLOSE);
//        editorPane.setEditable(false);
        try {
            editorPane.setEditable(false);
            editorPane.setPage("http://www.yoursite.com");
//            editorPaneAdminWikiList.setEnabled(false);
        } catch (IOException e) {
            editorPane.setContentType("text/html");
//            editorPaneAdminWikiList.setContentType("text/html");
            editorPane.setText(parseHyperText);
//          editorPaneAdminWikiList.setText();
        }

        Thread t = new Thread(this);
        t.start();

        pnlBlogsOfAdmins.setLayout(new GridLayout());
        pnlBlogsOfAdmins.add(new AdminWikiPanel("Admin", MiddleWare.uname));
        pnlBlogsOfAdmins.repaint();
        pnlBlogOfTutors.setLayout(new GridLayout());
        pnlBlogOfTutors.add(new TutorWikiPanel("Admin", MiddleWare.uname));
        pnlBlogOfTutors.repaint();
        pnlBlogOfStudents.setLayout(new GridLayout());
        pnlBlogOfStudents.add(new StudentWikiPanel("Admin", MiddleWare.uname));
        pnlBlogOfStudents.repaint();
        this.setTitle("Admin Panel");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        lblUserName = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        tabbedPane = new javax.swing.JTabbedPane();
        scrlStudentRequest = new javax.swing.JScrollPane();
        pnlStudentRequests = new javax.swing.JPanel();
        pnlBlogsOfAdmins = new javax.swing.JPanel();
        pnlBlogOfTutors = new javax.swing.JPanel();
        pnlBlogOfStudents = new javax.swing.JPanel();
        pnlEditPage = new javax.swing.JPanel();
        jInternalFrame1 = new javax.swing.JInternalFrame();
        jScrollPane2 = new javax.swing.JScrollPane();
        tAreaPageContent = new javax.swing.JTextArea();
        txtTitleBar = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        btnPreview = new javax.swing.JButton();
        btnSavePageContent = new javax.swing.JButton();
        pnlWritePage = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        editorPane = new javax.swing.JEditorPane();
        btnRevert = new javax.swing.JButton();
        btnEditCurrent = new javax.swing.JButton();
        btnLogOut = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        lblUserRole = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Logged in as :");

        javax.swing.GroupLayout pnlStudentRequestsLayout = new javax.swing.GroupLayout(pnlStudentRequests);
        pnlStudentRequests.setLayout(pnlStudentRequestsLayout);
        pnlStudentRequestsLayout.setHorizontalGroup(
            pnlStudentRequestsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 739, Short.MAX_VALUE)
        );
        pnlStudentRequestsLayout.setVerticalGroup(
            pnlStudentRequestsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 423, Short.MAX_VALUE)
        );

        scrlStudentRequest.setViewportView(pnlStudentRequests);

        tabbedPane.addTab("User Aproval Requests", scrlStudentRequest);

        javax.swing.GroupLayout pnlBlogsOfAdminsLayout = new javax.swing.GroupLayout(pnlBlogsOfAdmins);
        pnlBlogsOfAdmins.setLayout(pnlBlogsOfAdminsLayout);
        pnlBlogsOfAdminsLayout.setHorizontalGroup(
            pnlBlogsOfAdminsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 747, Short.MAX_VALUE)
        );
        pnlBlogsOfAdminsLayout.setVerticalGroup(
            pnlBlogsOfAdminsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 407, Short.MAX_VALUE)
        );

        tabbedPane.addTab("Admin Blog", pnlBlogsOfAdmins);

        javax.swing.GroupLayout pnlBlogOfTutorsLayout = new javax.swing.GroupLayout(pnlBlogOfTutors);
        pnlBlogOfTutors.setLayout(pnlBlogOfTutorsLayout);
        pnlBlogOfTutorsLayout.setHorizontalGroup(
            pnlBlogOfTutorsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 747, Short.MAX_VALUE)
        );
        pnlBlogOfTutorsLayout.setVerticalGroup(
            pnlBlogOfTutorsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 407, Short.MAX_VALUE)
        );

        tabbedPane.addTab("Tutor Blog", pnlBlogOfTutors);

        javax.swing.GroupLayout pnlBlogOfStudentsLayout = new javax.swing.GroupLayout(pnlBlogOfStudents);
        pnlBlogOfStudents.setLayout(pnlBlogOfStudentsLayout);
        pnlBlogOfStudentsLayout.setHorizontalGroup(
            pnlBlogOfStudentsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 747, Short.MAX_VALUE)
        );
        pnlBlogOfStudentsLayout.setVerticalGroup(
            pnlBlogOfStudentsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 407, Short.MAX_VALUE)
        );

        tabbedPane.addTab("Student Blog", pnlBlogOfStudents);

        jInternalFrame1.setVisible(true);

        tAreaPageContent.setColumns(20);
        tAreaPageContent.setRows(5);
        jScrollPane2.setViewportView(tAreaPageContent);

        jLabel3.setText("Page Title :");

        jPanel2.setBackground(new java.awt.Color(204, 204, 255));

        jLabel4.setText("^^....^^ ");

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel5.setText("Bold");

        jLabel6.setText("//......// ");

        jLabel7.setFont(new java.awt.Font("Tahoma", 2, 11)); // NOI18N
        jLabel7.setText("Italic");

        jLabel8.setText("__.....__ ");

        jLabel9.setText("<html><u>Underlined</u></html>");

        jLabel10.setText("##.....## ");

        jLabel11.setText("<html><blockquote>Blockquotted</blockquote><html>");

        jLabel12.setText("~~");

        jLabel13.setText("Jump to next line");

        jLabel14.setText("--......--");

        jLabel15.setText("Center");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel10)
                                    .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                        .addComponent(jLabel13)
                                        .addGap(22, 22, 22))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                        .addComponent(jLabel15)
                                        .addGap(47, 47, 47))))
                            .addComponent(jLabel14)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel4))
                                .addGap(63, 63, 63)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel7)
                                    .addComponent(jLabel5))))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(49, 49, 49))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(jLabel13))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(jLabel15))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jInternalFrame1Layout = new javax.swing.GroupLayout(jInternalFrame1.getContentPane());
        jInternalFrame1.getContentPane().setLayout(jInternalFrame1Layout);
        jInternalFrame1Layout.setHorizontalGroup(
            jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jInternalFrame1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jInternalFrame1Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtTitleBar))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 478, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(20, 20, 20))
        );
        jInternalFrame1Layout.setVerticalGroup(
            jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jInternalFrame1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jInternalFrame1Layout.createSequentialGroup()
                        .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtTitleBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 279, Short.MAX_VALUE))
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        btnPreview.setText("Preview");
        btnPreview.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPreviewActionPerformed(evt);
            }
        });

        btnSavePageContent.setText("Save");
        btnSavePageContent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSavePageContentActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlEditPageLayout = new javax.swing.GroupLayout(pnlEditPage);
        pnlEditPage.setLayout(pnlEditPageLayout);
        pnlEditPageLayout.setHorizontalGroup(
            pnlEditPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jInternalFrame1)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlEditPageLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnPreview)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnSavePageContent)
                .addContainerGap())
        );
        pnlEditPageLayout.setVerticalGroup(
            pnlEditPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlEditPageLayout.createSequentialGroup()
                .addComponent(jInternalFrame1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlEditPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnPreview)
                    .addComponent(btnSavePageContent))
                .addContainerGap())
        );

        tabbedPane.addTab("Page", pnlEditPage);

        jScrollPane1.setViewportView(editorPane);

        btnRevert.setText("Revert to previous");
        btnRevert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRevertActionPerformed(evt);
            }
        });

        btnEditCurrent.setText("Edit");
        btnEditCurrent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditCurrentActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlWritePageLayout = new javax.swing.GroupLayout(pnlWritePage);
        pnlWritePage.setLayout(pnlWritePageLayout);
        pnlWritePageLayout.setHorizontalGroup(
            pnlWritePageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 747, Short.MAX_VALUE)
            .addGroup(pnlWritePageLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(btnRevert)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnEditCurrent))
        );
        pnlWritePageLayout.setVerticalGroup(
            pnlWritePageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlWritePageLayout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 357, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(pnlWritePageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnRevert)
                    .addComponent(btnEditCurrent))
                .addContainerGap())
        );

        tabbedPane.addTab("Preview page", pnlWritePage);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(tabbedPane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(tabbedPane, javax.swing.GroupLayout.PREFERRED_SIZE, 435, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        btnLogOut.setText("Log Out");
        btnLogOut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLogOutActionPerformed(evt);
            }
        });

        jLabel2.setText("Username :");

        lblUserRole.setText("Admin");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(lblUserRole, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addComponent(lblUserName, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnLogOut)
                .addContainerGap())
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(btnLogOut, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lblUserRole, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lblUserName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnPreviewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPreviewActionPerformed
        // TODO add your handling code here:

        pageTitle = txtTitleBar.getText();
        pageContent = new StringBuilder(MarkdownProcessor.MarkdownProcessor.getMarkupText(tAreaPageContent.getText()));

        String parseHyperText = "<html>"
                + "<head>"
                + "<title>"
                + pageTitle
                + "</title>"
                + "</head>"
                + "<body>"
                + pageContent
                + "</body>"
                + "</html>";
        System.out.println(parseHyperText);
        tabbedPane.setSelectedIndex(5);
        editorPane.setEditable(false);
        editorPane.setText(parseHyperText);
        currentPageURI = "";
//        JOptionPane.showMessageDialog(null, parseHyperText);
    }//GEN-LAST:event_btnPreviewActionPerformed

    private void btnLogOutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLogOutActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
        MiddleWare.getMainWindowInstance().setVisible(true);
    }//GEN-LAST:event_btnLogOutActionPerformed

    private void btnSavePageContentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSavePageContentActionPerformed
        // TODO add your handling code here:
        pageTitle = txtTitleBar.getText();
        pageContent = new StringBuilder(MarkdownProcessor.MarkdownProcessor.getMarkupText(tAreaPageContent.getText()));
        String parseHyperText = "<html>"
                + "<head>"
                + "<title>"
                + pageTitle
                + "</title>"
                + "</head>"
                + "<body>"
                + pageContent
                + "</body>"
                + "</html>";

        String dir = lblUserRole.getText() + "\\" + lblUserName.getText();
        CreateUserInformation.createDirectory(dir);
        StringBuilder title = new StringBuilder(txtTitleBar.getText());
        for (int p = 0; p < title.length(); p++) {
            if (title.charAt(p) == ' ') {
                title.replace(p, p + 1, "");
            }
        }
        
//        FileWriter writer = null;
            String URI = "Wiki\\" + dir + "\\" + title.toString() + "_0_.html";
            String tempUri = "Wiki\\" + dir + "\\" + title.toString() + "_0_.txt";
            
        try {
            File f = new File(URI);
            
            boolean isFileAvailable = f.exists();
            if (!isFileAvailable) {
                FileOutputStream fos = new FileOutputStream(URI);
                MiddleWare.createNewPage(lblUserRole.getText(), lblUserName.getText(), txtTitleBar.getText(), URI, 0);

                byte[] b = parseHyperText.getBytes();
                fos.write(b);
                b = null;
                fos = new FileOutputStream(tempUri);
                b = tAreaPageContent.getText().getBytes();
                fos.write(b);
                fos.close();
            } else if (isFileAvailable) {
                String pageTitle = MiddleWare.readVersionData.getPageTitleByURI(URI);
                int latestVersion = MiddleWare.readVersionData.getLatestVersion(lblUserName.getText(), pageTitle);
                latestVersion += 1;
                URI = "Wiki\\" + dir + "\\" + title.toString() + "_" + latestVersion + "_.html";
                preVersionURI = URI;
                tempUri = "Wiki\\" + dir + "\\" + title.toString() + "_" + latestVersion + "_.txt";
                MiddleWare.createVersionData.addPageVersion(lblUserRole.getText(), lblUserName.getText(), txtTitleBar.getText(), URI, latestVersion);
                FileOutputStream fos = new FileOutputStream(URI);
                byte[] b = parseHyperText.getBytes();
                fos.write(b);
                b = null;
                fos = new FileOutputStream(tempUri);
                b = tAreaPageContent.getText().getBytes();
                fos.write(b);
                
                fos.close();
            }
            JOptionPane.showMessageDialog(null, "The page has been saved successfully!");
//            }
            preVersionURI = URI;
        } catch (IOException ex) {
            ex.printStackTrace();
            Logger.getLogger(CreateUserInformation.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnSavePageContentActionPerformed

    private void btnRevertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRevertActionPerformed
        
        FileInputStream fis = null;

            // TODO add your handling code here:
        if(revertButtonClicked == 1){
            preVersion = MiddleWare.readVersionData.getLatestVersion(AdminNameList.userName, AdminNameList.title)-1;
        }else{
            preVersion--;
        }
        System.out.println(preVersion + "\t@AdminPanel line 621");
        
        
        if (preVersion > -1) {
            try {
                preVersionURI = MiddleWare.readVersionData.getLatestVersionURI(preVersion, AdminNameList.title, AdminNameList.userName);
                System.out.println(preVersionURI + "\t@AdminPanel line 627");
                currentPageURI = preVersionURI;
                fis = new FileInputStream(preVersionURI);
                int i = 0;
                String content = "";
                while ((i = fis.read()) != -1) {
                    content += (char) i;
                }
                editorPane.setText(content);
                editorPane.repaint();
            } catch (FileNotFoundException ex) {
                Logger.getLogger(AdminPanel.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                Logger.getLogger(AdminPanel.class.getName()).log(Level.SEVERE, null, ex);
            } finally {
                try {
                    fis.close();
                } catch (IOException ex) {
                    Logger.getLogger(AdminPanel.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }else {
            JOptionPane.showMessageDialog(null, "No more old version exists.");
        }
        revertButtonClicked++;

    }//GEN-LAST:event_btnRevertActionPerformed

    private void btnEditCurrentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditCurrentActionPerformed
        FileInputStream fis = null;
        try {
            // TODO add your handling code here:
            if(currentPageURI.equals("")){
                tabbedPane.setSelectedIndex(4);
            }else{
                String URI = currentPageURI;
                URI = URI.substring(0, URI.length() - 4) + "txt";
                System.out.println(URI+"\t@AdminPanel Line 654");
                fis = new FileInputStream(URI);
                int i = 0;
                String content = "";
                while ((i = fis.read()) != -1) {
                    content += (char) i;
                }
                txtTitleBar.setText(AdminNameList.title);
                tAreaPageContent.setText(content);
                tabbedPane.setSelectedIndex(4);
                fis.close();
            }
        } catch (FileNotFoundException | NullPointerException ex) {
            JOptionPane.showMessageDialog(null, "<html>This file is not saved yet.<br>Please go to edit tab to edit this content.<html>");
            Logger.getLogger(AdminPanel.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(AdminPanel.class.getName()).log(Level.SEVERE, null, ex);
        }


    }//GEN-LAST:event_btnEditCurrentActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnEditCurrent;
    private javax.swing.JButton btnLogOut;
    private javax.swing.JButton btnPreview;
    private javax.swing.JButton btnRevert;
    private javax.swing.JButton btnSavePageContent;
    public static javax.swing.JEditorPane editorPane;
    private javax.swing.JInternalFrame jInternalFrame1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    public static javax.swing.JLabel lblUserName;
    public static javax.swing.JLabel lblUserRole;
    private javax.swing.JPanel pnlBlogOfStudents;
    private javax.swing.JPanel pnlBlogOfTutors;
    private javax.swing.JPanel pnlBlogsOfAdmins;
    private javax.swing.JPanel pnlEditPage;
    protected static javax.swing.JPanel pnlStudentRequests;
    private javax.swing.JPanel pnlWritePage;
    private javax.swing.JScrollPane scrlStudentRequest;
    private javax.swing.JTextArea tAreaPageContent;
    public static javax.swing.JTabbedPane tabbedPane;
    private javax.swing.JTextField txtTitleBar;
    // End of variables declaration//GEN-END:variables

    /**
     * @return the lblUserName
     */
    public javax.swing.JLabel getLblUserName() {
        return lblUserName;
    }

    @Override
    public void run() {
        try {
            pnlStudentRequests.setLayout(new GridLayout(5, 0, 10, 8));
            ArrayList<String> al = ReadUserInformation.getGivenPermissionStatus();

            for (int x = 0; x < al.size(); x++) {
                StringTokenizer stk = new StringTokenizer(al.get(x));
                username = stk.nextToken();
                userRole = stk.nextToken();
                permissionType = stk.nextToken();
                aLblText[x] = new AdvancedLabel("<html> " + username + " requires following permissions. "
                        + "<br> Role: " + userRole + " </html>");
                aComponentHolder[x] = new AdvancedPanel();
                aContainer[x] = new AdvancedPanel();
                aBtnSubmit[x] = new AdvancedButton("Submit");
                aBtnClose[x] = new AdvancedButton("Close");
                aChqEditPermission[x] = new AdvancedCheckBox("Read Permission");
                aChqReadPermission[x] = new AdvancedCheckBox("Edit Permission");

                aChqReadPermission[x].setId(x);
                aChqEditPermission[x].setId(x);
                aBtnClose[x].setId(x);
                aBtnSubmit[x].setId(x);
                aLblText[x].setId(x);
                aContainer[x].setId(x);
                aComponentHolder[x].setId(x);

                if (permissionType.equalsIgnoreCase("Edit")) {
                    aComponentHolder[x].setLayout(new GridLayout(1, 3));
                    aComponentHolder[x].add(aChqReadPermission[x], 0);
                    aComponentHolder[x].add(aBtnSubmit[x], 1);
                    aComponentHolder[x].add(aBtnClose[x], 2);
                } else if (permissionType.equalsIgnoreCase("Read")) {
                    aComponentHolder[x].setLayout(new GridLayout(1, 3));
                    aComponentHolder[x].add(aChqEditPermission[x], 0);
                    aComponentHolder[x].add(aBtnSubmit[x], 1);
                    aComponentHolder[x].add(aBtnClose[x], 2);
                } else if (permissionType.equalsIgnoreCase("All")) {
                    aComponentHolder[x].setLayout(new GridLayout(1, 4));
                    aComponentHolder[x].add(aChqReadPermission[x], 0);
                    aComponentHolder[x].add(aChqEditPermission[x], 1);
                    aComponentHolder[x].add(aBtnSubmit[x], 2);
                    aComponentHolder[x].add(aBtnClose[x], 3);
                }
                aContainer[x].setLayout(new GridLayout(2, 1));
                aContainer[x].add(aLblText[x], 0);
                aContainer[x].add(aComponentHolder[x], 1);
                aComponentHolder[x].setBackground(Color.decode("#AA99DD"));
                aContainer[x].setBackground(Color.decode("#AA99DD"));
                aComponentHolder[x].revalidate();
                aComponentHolder[x].repaint();
                aContainer[x].revalidate();
                aContainer[x].repaint();
                pnlStudentRequests.add(aContainer[x], 0);
                pnlStudentRequests.repaint();

                System.out.println(username + "\tline " + 833);
                System.out.println(permissionType);
                System.err.println(x);
                aBtnSubmit[x].addActionListener(new ActionListener() {

                    @Override
                    public void actionPerformed(ActionEvent e) {
                        AdvancedButton abtn = (AdvancedButton) e.getSource();
                        int id = abtn.getId();
                        try {
                            StringTokenizer stk = new StringTokenizer(aLblText[id].getText());
                            username = stk.nextToken();
                            username = stk.nextToken();
                            System.err.println(username);
                            UpdateUserInformation updateInf = new UpdateUserInformation();
                            if (aChqEditPermission[id].isSelected() && aChqReadPermission[id].isSelected()) {

                                updateInf.updatePermissionStatus(username, UpdateUserInformation.READ_PERMISSION, UpdateUserInformation.TRUE);
                                updateInf.updatePermissionStatus(username, UpdateUserInformation.EDIT_PERMISSION, UpdateUserInformation.TRUE);
                                updateInf.updatePermissionStatus(username, UpdateUserInformation.PERMISSION_STATUS, UpdateUserInformation.TRUE);
                                pnlStudentRequests.remove(aContainer[id]);
                                pnlStudentRequests.revalidate();
                                pnlStudentRequests.repaint();
                            } else if (aChqEditPermission[id].isSelected()) {
                                updateInf.updatePermissionStatus(username, UpdateUserInformation.READ_PERMISSION, UpdateUserInformation.TRUE);
                                updateInf.updatePermissionStatus(username, UpdateUserInformation.PERMISSION_STATUS, UpdateUserInformation.TRUE);
                                pnlStudentRequests.remove(aContainer[id]);
                                pnlStudentRequests.revalidate();
                                pnlStudentRequests.repaint();
                            } else if (aChqReadPermission[id].isSelected()) {
                                updateInf.updatePermissionStatus(username, UpdateUserInformation.EDIT_PERMISSION, UpdateUserInformation.TRUE);
                                updateInf.updatePermissionStatus(username, UpdateUserInformation.PERMISSION_STATUS, UpdateUserInformation.TRUE);
                                pnlStudentRequests.remove(aContainer[id]);
                                pnlStudentRequests.revalidate();
                                pnlStudentRequests.repaint();
                            }
                        } catch (ArrayIndexOutOfBoundsException ex) {
                            ex.printStackTrace();
                            JOptionPane.showMessageDialog(null, "Sorry, Maximum notification limit is 100");
                        } catch (SQLException ex) {
                            ex.printStackTrace();
//                                Logger.getLogger(class.getName()).log(Level.SEVERE, null, ex);
                        }
                    }
                });

                aBtnClose[x].addActionListener(new ActionListener() {

                    @Override
                    public void actionPerformed(ActionEvent e) {
                        AdvancedButton abtn = (AdvancedButton) e.getSource();
                        int id = abtn.getId();
                        pnlStudentRequests.remove(aContainer[id]);
                        pnlStudentRequests.revalidate();
                        pnlStudentRequests.repaint();
                    }
                });
            }
        } catch (SQLException ex) {
            ex.printStackTrace();
//                Logger.getLogger(class.getName()).log(Level.SEVERE, null, ex);
        }
    }
}
